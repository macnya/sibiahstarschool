type Subject @fdc.table(name: "subjects") {
  subjectId: String! @fdc.primaryKey @fdc.default(expression: "gen_random_uuid()")
  subjectName: String! @fdc.unique
  description: String
}

type Class @fdc.table(name: "classes") {
  classId: String! @fdc.primaryKey @fdc.default(expression: "gen_random_uuid()")
  className: String!
  gradeLevel: String!
  academicYear: String!

  enrollments: [Enrollment!] @fdc.relationship(principalFields: ["classId"], foreignFields: ["classId"])
  teacherAssignments: [TeacherClassAssignment!] @fdc.relationship(principalFields: ["classId"], foreignFields: ["classId"])
  grades: [Grade!] @fdc.relationship(principalFields: ["classId"], foreignFields: ["classId"])
  exams: [Exam!] @fdc.relationship(principalFields: ["classId"], foreignFields: ["classId"])
}

type Enrollment @fdc.table(
  name: "enrollments",
  uniqueConstraints: [{ name: "unique_student_class_enrollment", fields: ["studentId", "classId"] }]
) {
  enrollmentId: String! @fdc.primaryKey @fdc.default(expression: "gen_random_uuid()")
  studentId: String!
  classId: String!
  enrollmentDate: Date! @fdc.default(expression: "CURRENT_DATE")

  student: User! @fdc.relationship(principalFields: ["studentId"], foreignFields: ["userId"])
  class: Class! @fdc.relationship(principalFields: ["classId"], foreignFields: ["classId"])
}

type TeacherClassAssignment @fdc.table(
  name: "teacher_class_assignments",
  uniqueConstraints: [{ name: "unique_teacher_class_assignment", fields: ["teacherId", "classId"] }]
) {
  assignmentId: String! @fdc.primaryKey @fdc.default(expression: "gen_random_uuid()")
  teacherId: String!
  classId: String!

  teacher: User! @fdc.relationship(principalFields: ["teacherId"], foreignFields: ["userId"])
  class: Class! @fdc.relationship(principalFields: ["classId"], foreignFields: ["classId"])
}

type Grade @fdc.table(name: "grades") {
  gradeId: String! @fdc.primaryKey @fdc.default(expression: "gen_random_uuid()")
  studentId: String!
  classId: String!
  subjectId: String!
  term: String!
  score: String
  comments: String
  recordedById: String!
  recordedAt: Timestamp! @fdc.default(expression: "CURRENT_TIMESTAMP")

  student: User! @fdc.relationship(principalFields: ["studentId"], foreignFields: ["userId"])
  class: Class! @fdc.relationship(principalFields: ["classId"], foreignFields: ["classId"])
  subject: Subject! @fdc.relationship(principalFields: ["subjectId"], foreignFields: ["subjectId"])
  recordedBy: User! @fdc.relationship(principalFields: ["recordedById"], foreignFields: ["userId"])
}

type Exam @fdc.table(name: "exams") {
  examId: String! @fdc.primaryKey @fdc.default(expression: "gen_random_uuid()")
  examName: String!
  subjectId: String!
  classId: String!
  examDate: Date!
  details: String

  subject: Subject! @fdc.relationship(principalFields: ["subjectId"], foreignFields: ["subjectId"])
  class: Class! @fdc.relationship(principalFields: ["classId"], foreignFields: ["classId"])
}
